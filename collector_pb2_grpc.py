# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import collector_pb2 as collector__pb2


class CollectorStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ValidateRule = channel.unary_unary(
        '/drago.services.collector.Collector/ValidateRule',
        request_serializer=collector__pb2.Rule.SerializeToString,
        response_deserializer=collector__pb2.TaskResponse.FromString,
        )
    self.StartRule = channel.unary_unary(
        '/drago.services.collector.Collector/StartRule',
        request_serializer=collector__pb2.Rule.SerializeToString,
        response_deserializer=collector__pb2.TaskResponse.FromString,
        )
    self.StopRule = channel.unary_unary(
        '/drago.services.collector.Collector/StopRule',
        request_serializer=collector__pb2.Rule.SerializeToString,
        response_deserializer=collector__pb2.TaskResponse.FromString,
        )
    self.ValidateRules = channel.unary_unary(
        '/drago.services.collector.Collector/ValidateRules',
        request_serializer=collector__pb2.Rules.SerializeToString,
        response_deserializer=collector__pb2.TaskResponses.FromString,
        )
    self.StartRules = channel.unary_unary(
        '/drago.services.collector.Collector/StartRules',
        request_serializer=collector__pb2.Rules.SerializeToString,
        response_deserializer=collector__pb2.TaskResponses.FromString,
        )
    self.StopRules = channel.unary_unary(
        '/drago.services.collector.Collector/StopRules',
        request_serializer=collector__pb2.Rules.SerializeToString,
        response_deserializer=collector__pb2.TaskResponses.FromString,
        )


class CollectorServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def ValidateRule(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StartRule(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StopRule(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ValidateRules(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StartRules(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StopRules(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_CollectorServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ValidateRule': grpc.unary_unary_rpc_method_handler(
          servicer.ValidateRule,
          request_deserializer=collector__pb2.Rule.FromString,
          response_serializer=collector__pb2.TaskResponse.SerializeToString,
      ),
      'StartRule': grpc.unary_unary_rpc_method_handler(
          servicer.StartRule,
          request_deserializer=collector__pb2.Rule.FromString,
          response_serializer=collector__pb2.TaskResponse.SerializeToString,
      ),
      'StopRule': grpc.unary_unary_rpc_method_handler(
          servicer.StopRule,
          request_deserializer=collector__pb2.Rule.FromString,
          response_serializer=collector__pb2.TaskResponse.SerializeToString,
      ),
      'ValidateRules': grpc.unary_unary_rpc_method_handler(
          servicer.ValidateRules,
          request_deserializer=collector__pb2.Rules.FromString,
          response_serializer=collector__pb2.TaskResponses.SerializeToString,
      ),
      'StartRules': grpc.unary_unary_rpc_method_handler(
          servicer.StartRules,
          request_deserializer=collector__pb2.Rules.FromString,
          response_serializer=collector__pb2.TaskResponses.SerializeToString,
      ),
      'StopRules': grpc.unary_unary_rpc_method_handler(
          servicer.StopRules,
          request_deserializer=collector__pb2.Rules.FromString,
          response_serializer=collector__pb2.TaskResponses.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'drago.services.collector.Collector', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
